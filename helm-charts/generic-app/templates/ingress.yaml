{{- if .Values.ingress.enabled -}}
{{- $fullName := include "generic-app.fullname" . -}}
{{- $svcPort := .Values.container.port -}}
{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "generic-app.labels" . | nindent 4 }}
  {{- if .Values.ingress.tls.enabled }}
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  {{- end }}
spec:
  {{- if semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion }}
  ingressClassName: "nginx"
  {{- end }}
  {{- if .Values.ingress.tls.enabled }}
  tls:
    {{- range .Values.ingress.hosts }}
    - hosts:
        - {{ .host | quote }}
      secretName: {{ $fullName }}-tls
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          - path: "/"
            {{- if semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion }}
            pathType: "Prefix"
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
    {{- end }}
{{- end }} 